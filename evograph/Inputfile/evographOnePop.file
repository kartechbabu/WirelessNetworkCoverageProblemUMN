#*********************************************************************
# input parameter file for graph evolution
# Jianjun Hu (hujianju@cse.msu.edu)
# Computer Science Department
# Michigan State University
# East Lansing, MI 48823

#app-specific parameters
app.clientGraphFile=client.txt
app.watchInterval=1
app.maxServiceRadius=100
output.basename = BestGraph

max_generations =3000
pop_size = 100

#we can set the random_seed if you want to repeat your result
#random_seed = 777


# how to generate the initial population
#init.method = grow
#init.method = full
init.method = half_and_half
init.depth = 3-6

#limits on treesize.
max_nodes = 200
max_depth = 17


## breeding parameters (emulates Koza Ch. 7)
breed_phases = 2
breed[1].operator = crossover, select=(tournament, size=7)
breed[1].rate = 0.9
breed[2].operator = mutation, select=(tournament, size=5)
breed[2].rate = 0.1

multiple.subpops = 1	  #how many subpopulations
subpop[1].fitness = 1 #use structure fitness
subpop[2].fitness = 0 #use parameter fitness
output.bestn =5;



#backup options 
#breed[3].operator = reproduction, select = fitness
#breed[3].rate = 0.1
#breed[1].operator = crossover, select = random
#breed[1].operator = crossover, select=fitness
#breed[1].operator = crossover, select=best
#breed[1].operator = crossover, select=tournament
#breed[1].operator = crossover, select=fitness_overselect
#breed[2].operator = reproduction, select = random
#breed[2].operator = mutation, select = fitness, method = grow, depth = 4 
#breed[2].operator = reproduction, select = fitness
#breed[2].operator = mutation, select=fitness_overselect
#breed[2].operator = mutation, select=fitness_overselect



